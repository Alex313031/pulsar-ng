linux_task:
  only_if: $CIRRUS_CRON != "" || $CIRRUS_TAG != ""
  skip: $CIRRUS_CHANGE_IN_REPO == $CIRRUS_LAST_GREEN_CHANGE
  clone_script: true # Just a fake clone script to save a second
  container:
    image: node:16-slim
    cpu: 1
    timeout_in: 6s
  echo_env_vars_script:
    - echo "CIRRUS_CRON is: xyz--${CIRRUS_CRON}--xyz"
    - echo "CIRRUS_TAG is: xyz--${CIRRUS_TAG}--xyz"
    - echo "CIRRUS_CHANGE_IN_REPO is: xyz--${CIRRUS_CHANGE_IN_REPO}--xyz"
    - echo "CIRRUS_LAST_GREEN_CHANGE is: xyz--${CIRRUS_LAST_GREEN_CHANGE}--xyz"

silently_mark_skipped_or_no_scheduled_task_builds_as_failed_task:
  skip_notifications: true
  # "skip_notifications: true" makes GitHub see the build as successful, for cleaner statuses on GitHub.
  only_if: $CIRRUS_CRON == "" && $CIRRUS_TAG == ""
  # Only mark the "skipped" or "no-tasks-cheduled" builds as failed. "Cron" builds and "tag push" builds should be allowed to succeed.
  # !!! Don't forget to update the "only_if:" for this task to match if you update the logic in the other tasks. !!!
  container:
    image: alpine:latest
    # A light and minimal image, to save Cirrus some resources, why not?
    cpu: 1
    # Set CPU cores used by the VM to 1, otherwise we burn double the CPU-seconds per IRL second due to 2 CPU cores provisioned by default.
  clone_script: |
    true
    # Fake "clone repo" script that  does nothing other than exit with status 0 (a "clean" status code)
    # Overwrites the default clone script that would actually try to clone stuff, which takes a few seconds of billable CPU time.
  mark_task_as_failed_script: |
    false
    # This command does nothing other than exit with status 1 (an "error" status code), thus failing the build.
    # This "failing" script prevents "skipped" or "no tasks scheduled" builds from updating the CIRRUS_LAST_GREEN_CHANGE to their newer commit SHAs.
    # Yes, this is kind of hacky, but it works.
  timeout_in: 6s
  # Avoid wasting any more than 6 seconds, or up to 12 seconds if an automatic re-run is triggered. 2 seconds is more typical.
