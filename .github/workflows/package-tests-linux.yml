name: Package tests for Pulsar on Linux
on:
  - pull_request
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  ATOM_JASMINE_REPORTER: list
jobs:
  setup:
    name: Build Editor
    if: |
      !startsWith(github.event.pull_request.title, '[skip-ci]') &&
      !startsWith(github.event.pull_request.title, '[skip-package-ci]')
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout the latest code
      uses: actions/checkout@v2

    - name: Setup node
      uses: actions/setup-node@v2-beta
      with:
        node-version: 16

    - name: Install Dependencies
      run: yarn install

    - name: Build Dependencies
      run: yarn build

    - name: build dependencies
      run: yarn build:apm

    - name: build the editor
      run: (yarn dist deb || yarn dist deb) && mv binaries/*deb pulsar.deb

    - name: install Pulsar
      run: sudo dpkg -i pulsar.deb && sudo apt-get -f install -y

    - name: Install xvfb
      run: sudo apt-get install -y xvfb

    - name: run tests
      shell: node {0}
      run: |
        const cp = require("child_process");
        const fs = require("fs");

        const packages = fs.readdirSync("packages");

        const results = packages.map(package => {
          let result;

          if (!fs.existsSync(`node_modules/${package}/soec`)) return false;

          console.log(`::group::tests for ${package}`);
          try {
            cp.execSync(
              `Xvfb :1 & cd node_modules/${package} && if test -d spec; then DISPLAY=:1 pulsar --test spec; fi`,
              { stdio: "inherit" }
            );
            result = [package, true];
          } catch (err) {
            result = [package, false];
          }
          console.log("::endgroup::");

          return result;
        }).filter(v => v);

        results.forEach(([package, passed]) => {
          if (passed) {
            console.log(`::notice title=tests for ${package}::passed`);
          } else {
            console.log(`::error title=tests for ${package}::failed`);
          }
        });
