name: Build Binaries

on:
  pull_request:
  push:
    branches: [ 'master' ]

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  PYTHON_VERSION: 3.10
  NODE_VERSION: 16

jobs:
  build_linux:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    steps:
    - name: Checkout the latest code
      uses: actions/checkout@v3

    - name: Setup Node
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Setup FFmpeg
      # GitHub Actions won't let us install ffmpeg from 'apt-get install'
      uses: FedericoCarboni/setup-ffmpeg@v2

    - name: Install System Dependencies
      run: |
        sudo apt-get update
        export DEBIAN_FRONTEND="noninteractive"
        sudo apt-get install -y \
                  rpm \
                  build-essential \
                  git \
                  libsecret-1-dev \
                  fakeroot \
                  libx11-dev \
                  libxkbfile-dev \
                  libgdk-pixbuf2.0-dev \
                  libgtk-3-dev \
                  libxss-dev \
                  libasound2-dev \
                  libnss3 \
                  xvfb
        git submodule init
        git submodule update
        sed -i -e "s/[0-9]*-dev/`date -u + %Y%m%d%H`/g" package.json

    - name: Install Pulsar Dependencies
      run: yarn install --ignore-engines

    - name: Build Pulsar
      run: |
        yarn build
        yarn run build:apm

    - name: Build Pulsar Binaries
      run: yarn dist

    - name: Test Binary
      run: |
        rm -R node_modules/electron; yarn install --check-files
        ./binaries/*AppImage --appimage-extract
        export BINARY_NAME='squashfs-root/pulsar'
        mkdir -p ./tests/videos
        Xvfb -screen 0 1024x768x24+32 :99 & nohup ffmpeg -video_size 1024x768 -f x11grab -i :99.0 ./tests/videos/out.mpg & DISPLAY=:99 PLAYWRIGHT_JUNIT_OUTPUT_NAME=report.xml npx playwright test --reporter=junit,list

    - name: Upload Binary Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: Binaries
        path: ./binaries/*

    - name: Upload Video Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: Videos
        path: ./tests/videos/**

  #build_arm_linux:
  #  runs-on:

  #build_silicon_mac:
  #  runs-on: macos-latest-x1

  #build_intel_mac:
  #  runs-on: macos-latest

  #build_windows:
  #  runs-on: windows-latest
